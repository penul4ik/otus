1. Подключаем удаленный git репозиторий
2. Создаем Vagrantfile следующего содержания:

MACHINES = { #Объявляем переменную
  :"kernel-update" => { #Описываем конфигурацию машины
              :box => "generic/centos7", #Указываем базовый образ ОС
              :box_version => "4.2.16", #Указываем версию базового образа
              :cpus => 2, #Ядра
              :memory => 1024, #ОЗУ
            }
}
#Создаем машину
Vagrant.configure("2") do |config| #Указываем, что используем 2-ую версию конфигурации объекта конфигурации |config|
    MACHINES.each do |boxname, boxconfig| #Указываем параметры ВМ путем итерации по перменной MACHINES 
        config.vm.synced_folder ".", "/vagrant", disabled: true #Отключаем общую папку
        config.vm.define boxname do |box| #Применяем конфигурацию ВМ
            box.vm.box = boxconfig[:box]
            box.vm.box_version = boxconfig[:box_version]
            box.vm.provider "virtualbox" do |v| #Указываем вм провайдера (Какой гипервизор будем использовать)
                v.memory = boxconfig[:memory]
                v.cpus = boxconfig[:cpus]
            end
        end
    end
end

3. vagrant up - поднимаем машину
4. vagrant ssh

------------------------------------
Начинаем собирать ядро из исходников
------------------------------------

5. uname -r - проверяем текущую версию ядра (3.10.0-1160.88.1.el7.x86_64)
6. скачиваем последнее стабильное ядро с сайта kernel.org. wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.4.7.tar.xz (по хорошему можно было бы скачать в /usr/src, но я вспомнил об этом слишком поздно)
7. sudo -s
8. yum install nano
9. tar -Jxvf linux-6.4.7.tar.xz
10. rm -rf linux-6.4.7.tar.xz
11. yum groupinstall "Development Tools" - установка необходимого для сборки ПО
12. yum install hmaccalc zlib-devel binutils-devel elfutils-libelf-devel
14. make menuconfig
15. сталкиваемся с ошибкой 
*** C compiler is too old.
***   Your GCC version:    4.8.5
***   Minimum GCC version: 5.1.0
Устанавливаем gcc-7 https://www.softwarecollections.org/en/scls/rhscl/devtoolset-7/
16. yum install centos-release-scl
17. yum-config-manager --enable rhel-server-rhscl-7-rpms
18. yum install devtoolset-7
19. scl enable devtoolset-7 bash
20. make menuconfig
21. по приколу отключим модуль поддержки XFS filesystem
22. делаем exit пока не попадем в cli
23. победа! Мы создали файл .config, который описывает конфигурацию будущего ядра
24. make dep - смотрим какие есть зависимости, если есть - надо загрузить
25. make -j6 - собираем ядро задействуя 6 ядер. Предварительно отредактировав Vagrantfile
26. получаем ошибку с openssl
27. yum install openssl-devel.x86_64
28. make -j6
29. make modules - после сборки ядра начинаем собирать модули
30. получаем остановку сборки модулей на моменте установки libsubcmd_headers
31. yum install devtoolset-8 - устанавливаем devtoolset-8 
32. make modules - продолжаем сборку модулей
33. ничего не собирается. 
34. make mrproper в директории с ядром
35. Скачиваем ядро 4.14.320 
36. Делаем .config файл, собираем ядро, собираем модули
37. make modules_install
38. make install
39. uname -r - ядро 3.10.0-1160.88.1.el7.x86_64
40. reboot
41. uname -r - то же ядро, потому что ОС загружается со старого ядра
42. cat /boot/grub2/grub.cfg | grep menuentry - видим, что наше ядро 1-ое в списке
43. меняем параметр GRUB_DEFAULT=saved на 1 в файле /etc/default/grub
44. grub2-mkconfig -o /boot/grub2/grub.cfg - говорим загрузчику перечитать конфиг
45. ничего не загружается, потому что ранее была отключена поддержка XFS
46. пересобираем ядро с поддержкой XFS
47. uname -r - ядро 4.14.320
