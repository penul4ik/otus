### В чем разница между докер-контейнером и докер-образом? ###

Докер-образ - это статический неизменяемый файл, который потом используется для 
создания докер-контейнеров. В этом файле слоями описаны внесения изменений или 
добавления новых файлов в базовый образ, который взят за основу при создании докер-образа.
Докер-образ собирается с помощью утилиты docker с опцией build на основе Dockerfile,
в котором описаны изменения базового образа. Докер-образ может хранится в специальном 
репозитории докер образов, например DockerHub.

Докер-контейнер - это, в свою очередь, запущенный на основе докер-образа процесс в 
хост-системе, который изолирован от остальных процессов в системе с помощью функционала 
namespace и cgroups, эмулируя при этом функционал ОС из базового образа докер-образа. 
Контейнер добавляет к образу слой Docker layer, уникальный для каждого контейнера. Этот слой 
позволяет приложению "внутри" контейнера создавать и изменять файлы. Контейнер сохраняет 
свое состояние до тех пор, пока не будет удален. Все изменения, в контейнере, в этом случае 
будут утеряны. 

По итогу: Докер-образ - это шаблон, инструкция для запуска докер-контейнера. А 
докер-контейнер - это динамическая среда, для изоляции того или иного приложения, в режиме 
реального времени.

### Можно ли собрать ядро в докер контейнере? ###

Да, можно. Конечно, докер по умолчанию не позволяет загрузить модуль ядра. Но это можно 
исправить запустив контейнер в привилегированном режиме с ключом --privelege. 
Вот статья - https://www.baeldung.com/linux/docker-container-kernel-modules#:~:text=By%20default%2C%20the%20Docker%20engine,we%20use%20the%20%E2%80%93privileged%20option.

Вот статья, где собирают ядро в контейнере и обновляют его, если я правильно ее понял - https://real-time-working-group.readthedocs.io/en/foxy/Guides/Real-Time-Operating-System-Setup/Real-Time-Linux/build_rt_kernel.html

Я понимаю, чем обоснован такой вопрос - контейнер использует ядро хост-системы. Тем не менее, я не вижу причин, которые бы не позволили "собрать ядро" внутри контейнера. Другое дело, что это будет непросто и я не уверен, что изнутри контейнера получиься обновить ядро на новое. Проверить я не смогу, компиляция ядра очень затратное до времени дело, у меня нет возможности для этого. Так как задание этого не требует.